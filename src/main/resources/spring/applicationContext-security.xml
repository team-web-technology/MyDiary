<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<security:global-method-security
		secured-annotations="enabled" jsr250-annotations="enabled"
		pre-post-annotations="enabled">
		<!-- <security:protect-pointcut access="ROLE_ADMIN" expression="execution(* 
			com.apress.pss.terrormovies.service.MoviesService.*(..))" /> -->
	</security:global-method-security>


	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider
			ref="myAuthenticationProvider">
		</security:authentication-provider>

	</security:authentication-manager>


	<security:http pattern="/login" security="none" />
	
	<security:http authentication-manager-ref="authenticationManager"
		use-expressions="true" access-denied-page="/403" auto-config="true"
		disable-url-rewriting="true">

		<!-- enabled all user can access resource -->
		<security:intercept-url pattern="/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/css/**"
			access="permitAll" />
		<security:intercept-url pattern="/fonts/**"
			access="permitAll" />
		<security:intercept-url pattern="/images/**"
			access="permitAll" />
		<security:intercept-url pattern="/js/**"
			access="permitAll" />
		<security:intercept-url pattern="/less/**"
			access="permitAll" />

		<!-- enabled all user can access register action -->
		<security:intercept-url pattern="/user/signup"
			access="permitAll" />

		<!-- enabled all user have role can access -->
		<security:intercept-url pattern="/**"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		
		
		<!-- enabled  user have role admin can access -->
		<security:intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
		
		<security:session-management
			invalid-session-url="/login?time=1">
			<security:concurrency-control
				max-sessions="1" expired-url="/login?time=1"
				error-if-maximum-exceeded="true" />
		</security:session-management>


		<security:form-login login-page='/login'
			login-processing-url="/login.do" default-target-url="/"
			always-use-default-target="true" authentication-failure-url="/login?err=1"
			username-parameter="username" password-parameter="password" />

		<security:logout delete-cookies="JSESSIONID"
			logout-url="/logout" success-handler-ref="logoutRedirectToAny"
			invalidate-session="true" />

	</security:http>


	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<ref bean="roleVoter" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<constructor-arg>
			<bean
				class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
				<property name="hierarchy">
					<value>
						ROLE_ADMIN > ROLE_USER
						ROLE_USER > ROLE_GUEST
					</value>
				</property>
			</bean>
		</constructor-arg>
	</bean>


	<bean id="logoutRedirectToAny"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
		<property name="targetUrlParameter" value="redirectTo" />
	</bean>

</beans>
