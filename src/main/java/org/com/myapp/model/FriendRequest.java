package org.com.myapp.model;

// Generated Dec 4, 2014 12:47:13 AM by Hibernate Tools 3.6.0

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Friendrequest generated by hbm2java
 */
@Entity
@Table(name = "friendrequest", catalog = "diary_v2")
public class FriendRequest implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private FriendRequestId id;
	private UserProfile userprofileByReceiverId;
	private UserProfile userprofileBySenderId;
	private Date created;

	public FriendRequest() {
	}

	public FriendRequest(FriendRequestId id,
			UserProfile userprofileByReceiverId,
			UserProfile userprofileBySenderId) {
		this.id = id;
		this.userprofileByReceiverId = userprofileByReceiverId;
		this.userprofileBySenderId = userprofileBySenderId;
	}

	public FriendRequest(FriendRequestId id,
			UserProfile userprofileByReceiverId,
			UserProfile userprofileBySenderId, Date created) {
		this.id = id;
		this.userprofileByReceiverId = userprofileByReceiverId;
		this.userprofileBySenderId = userprofileBySenderId;
		this.created = created;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "senderId", column = @Column(name = "SenderId", nullable = false)),
			@AttributeOverride(name = "receiverId", column = @Column(name = "ReceiverId", nullable = false)) })
	public FriendRequestId getId() {
		return this.id;
	}

	public void setId(FriendRequestId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ReceiverId", nullable = false, insertable = false, updatable = false)
	public UserProfile getUserprofileByReceiverId() {
		return this.userprofileByReceiverId;
	}

	public void setUserprofileByReceiverId(UserProfile userprofileByReceiverId) {
		this.userprofileByReceiverId = userprofileByReceiverId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SenderId", nullable = false, insertable = false, updatable = false)
	public UserProfile getUserprofileBySenderId() {
		return this.userprofileBySenderId;
	}

	public void setUserprofileBySenderId(UserProfile userprofileBySenderId) {
		this.userprofileBySenderId = userprofileBySenderId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

}
